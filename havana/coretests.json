{ "criteria" : { "atomic" : { "Description" : "Capabilities is unique and cannot be built out of other must-pass capabilities",
          "name" : "Atomic"
        },
      "clients" : { "Description" : "Candidates are widely used capabilities: Should be included if part of common libraries (Fog, Apache jclouds, etc)",
          "name" : "Used by Clients"
        },
      "complete" : { "Description" : "Where the code being tested has a designated area of alternate implementation (extension framework) as per the Core Principles, there should be parity in capability tested across extension implementations. This also implies that the capability test is not configuration specific or locked to non-open technology.",
          "name" : "Complete"
        },
      "core" : { "Description" : "A test that is a must-pass test should stay a must-pass test. This make makes core capabilities sticky release per release. Leaving Core is disruptive to the ecosystem",
          "name" : "Core in Last Release"
        },
      "deployed" : { "Description" : "Candidates are widely deployed capabilities. We favor capabilities that are supported by multiple public cloud providers and private cloud products.",
          "name" : "Widely Deployed"
        },
      "discover" : { "Description" : "Capability being tested is Service Discoverable (can be found in Keystone and via service introspection)",
          "name" : "Discoverable"
        },
      "doc" : { "Description" : "Should be well documented, particularly the expected behavior. This can be a very subjective measure and we expect to refine this definition over time.",
          "name" : "Documented"
        },
      "foundation" : { "Description" : "Test capabilities that are required by other must-pass tests and/or depended on by many other capabilities",
          "name" : "Foundation"
        },
      "future" : { "Description" : "Should reflect future technical direction (from the project technical teams and the TC) and help manage deprecated capabilities.",
          "name" : "Future Direction"
        },
      "proximity" : { "Description" : "Sometimes called a Test Cluster, selects for Capabilities that are related to Core Capabilities. This helps ensure that related capabilities are managed together.",
          "name" : "Proximity"
        },
      "stable" : { "Description" : "Test is required stable for >2 releases because we don't want core capabilities that do not have dependable APIs.",
          "name" : "Stable"
        },
      "tools" : { "Description" : "Candidates are widely used capabilities:Should be included if supported by common tools (RightScale, Scalr, CloudForms, ...)",
          "name" : "Used by Tools"
        }
    },
  "tests" : { "test_access_public_container_object_without_using_creds" : { "file" : "test_object_services.py" },
      "test_access_public_object_with_another_user_creds" : { "file" : "test_object_services.py" },
      "test_add_image_member" : { "file" : "v1/test_image_members.py" },
      "test_add_member_with_non_existing_image" : { "file" : "v1/test_image_members.py" },
      "test_add_remove_router_interface_with_port_id" : { "file" : "test_routers.py" },
      "test_add_remove_router_interface_with_subnet_id" : { "file" : "test_routers.py" },
      "test_admin_modify_quota" : { "file" : "test_account_quotas.py" },
      "test_assign_duplicate_user_role" : { "file" : "admin/test_roles.py" },
      "test_assign_user_role" : { "file" : "admin/test_roles.py" },
      "test_assign_user_role_by_unauthorized_user" : { "file" : "admin/test_roles.py" },
      "test_assign_user_role_for_non_existent_role" : { "file" : "admin/test_roles.py" },
      "test_assign_user_role_for_non_existent_tenant" : { "file" : "admin/test_roles.py" },
      "test_assign_user_role_for_non_existent_user" : { "file" : "admin/test_roles.py" },
      "test_assign_user_role_request_without_token" : { "file" : "admin/test_roles.py" },
      "test_associate_disassociate_health_monitor_with_pool" : { "file" : "test_load_balancer.py" },
      "test_associate_user_to_project" : { "file" : "admin/v3/test_projects.py" },
      "test_authentication_for_disabled_user" : { "file" : "admin/test_users_negative.py" },
      "test_authentication_request_without_token" : { "file" : "admin/test_users.py" },
      "test_authentication_when_tenant_is_disabled" : { "file" : "admin/test_users_negative.py" },
      "test_authentication_with_invalid_password" : { "file" : "admin/test_users_negative.py" },
      "test_authentication_with_invalid_tenant" : { "file" : "admin/test_users_negative.py" },
      "test_authentication_with_invalid_username" : { "file" : "admin/test_users_negative.py" },
      "test_bulk_create_delete_network" : { "file" : "test_networks.py" },
      "test_bulk_create_delete_port" : { "file" : "test_networks.py" },
      "test_bulk_create_delete_subnet" : { "file" : "test_networks.py" },
      "test_can_log_into_created_server" : { "file" : "stacks/test_server_cfn_init.py" },
      "test_change_server_password" : { "file" : "servers/test_server_actions.py" },
      "test_container_metadata" : { "file" : "test_container_services.py" },
      "test_container_synchronization" : { "file" : "test_container_sync.py" },
      "test_copy_object_2d_way" : { "file" : "test_object_services.py" },
      "test_copy_object_across_containers" : { "file" : "test_object_services.py" },
      "test_copy_object_in_same_container" : { "file" : "test_object_services.py" },
      "test_copy_object_to_itself" : { "file" : "test_object_services.py" },
      "test_create_and_delete_account_metadata" : { "file" : "test_account_services.py" },
      "test_create_container" : { "file" : "test_container_services.py" },
      "test_create_get_delete_service" : { "file" : "admin/test_services.py" },
      "test_create_list_delete_endpoint" : { "file" : "admin/v3/test_endpoints.py" },
      "test_create_list_show_update_delete_floating_ip" : { "file" : "test_floating_ips.py" },
      "test_create_numeric_server_name" : { "file" : "servers/test_servers_negative.py" },
      "test_create_object" : { "file" : "test_object_services.py" },
      "test_create_project_by_unauthorized_user" : { "file" : "admin/v3/test_projects.py" },
      "test_create_project_with_empty_name" : { "file" : "admin/v3/test_projects.py" },
      "test_create_projects_name_length_over_64" : { "file" : "admin/v3/test_projects.py" },
      "test_create_server_metadata_exceeds_length_limit" : { "file" : "servers/test_servers_negative.py" },
      "test_create_server_name_length_exceeds_256" : { "file" : "servers/test_servers_negative.py" },
      "test_create_server_response" : { "file" : "servers/test_create_server.py" },
      "test_create_server_with_admin_password" : { "file" : "servers/test_servers.py" },
      "test_create_show_delete_security_group" : { "file" : "test_security_groups.py" },
      "test_create_show_delete_security_group_rule" : { "file" : "test_security_groups.py" },
      "test_create_show_list_update_delete_router" : { "file" : "test_routers.py" },
      "test_create_tenant_by_unauthorized_user" : { "file" : "admin/test_tenant_negative.py" },
      "test_create_tenant_request_without_token" : { "file" : "admin/test_tenant_negative.py" },
      "test_create_tenant_with_empty_name" : { "file" : "admin/test_tenant_negative.py" },
      "test_create_tenants_name_length_over_64" : { "file" : "admin/test_tenant_negative.py" },
      "test_create_update_delete_domain" : { "file" : "admin/v3/test_domains.py" },
      "test_create_update_delete_health_monitor" : { "file" : "test_load_balancer.py" },
      "test_create_update_delete_member" : { "file" : "test_load_balancer.py" },
      "test_create_update_delete_network_subnet" : { "file" : "test_networks.py" },
      "test_create_update_delete_policy" : { "file" : "admin/v3/test_policies.py" },
      "test_create_update_delete_pool_vip" : { "file" : "test_load_balancer.py" },
      "test_create_update_delete_port" : { "file" : "test_networks.py" },
      "test_create_update_delete_vpn_service" : { "file" : "test_vpnaas_extensions.py" },
      "test_create_user" : { "file" : "admin/test_users.py" },
      "test_create_user_by_unauthorized_user" : { "file" : "admin/test_users_negative.py" },
      "test_create_user_for_non_existant_tenant" : { "file" : "admin/test_users_negative.py" },
      "test_create_user_request_without_a_token" : { "file" : "admin/test_users_negative.py" },
      "test_create_user_with_duplicate_name" : { "file" : "admin/test_users_negative.py" },
      "test_create_user_with_empty_name" : { "file" : "admin/test_users_negative.py" },
      "test_create_user_with_enabled" : { "file" : "admin/test_users.py" },
      "test_create_user_with_enabled_non_bool" : { "file" : "admin/test_users_negative.py" },
      "test_create_user_with_name_length_over_255" : { "file" : "admin/test_users_negative.py" },
      "test_create_with_existing_server_name" : { "file" : "servers/test_servers.py" },
      "test_create_with_invalid_flavor" : { "file" : "servers/test_servers_negative.py" },
      "test_create_with_invalid_image" : { "file" : "servers/test_servers_negative.py" },
      "test_create_with_invalid_network_uuid" : { "file" : "servers/test_servers_negative.py" },
      "test_created_network" : { "file" : "stacks/test_neutron_resources.py" },
      "test_created_resources" : { "file" : "stacks/test_neutron_resources.py" },
      "test_created_router_interface" : { "file" : "stacks/test_neutron_resources.py" },
      "test_created_server" : { "file" : "stacks/test_neutron_resources.py" },
      "test_created_subnet" : { "file" : "stacks/test_neutron_resources.py" },
      "test_credentials_create_get_update_delete" : { "file" : "admin/v3/test_credentials.py" },
      "test_credentials_list_delete" : { "file" : "admin/v3/test_credentials.py" },
      "test_delete_a_server_of_another_tenant" : { "file" : "servers/test_servers_negative.py" },
      "test_delete_active_server" : { "file" : "servers/test_servers.py" },
      "test_delete_container" : { "file" : "test_container_services.py" },
      "test_delete_member_with_non_existing_image" : { "file" : "v1/test_image_members.py" },
      "test_delete_member_with_non_existing_tenant" : { "file" : "v1/test_image_members.py" },
      "test_delete_non_existant_user" : { "file" : "admin/test_users_negative.py" },
      "test_delete_non_existent_project" : { "file" : "admin/v3/test_projects.py" },
      "test_delete_non_existent_server" : { "file" : "servers/test_servers_negative.py" },
      "test_delete_non_existent_tenant" : { "file" : "admin/test_tenant_negative.py" },
      "test_delete_object" : { "file" : "test_object_services.py" },
      "test_delete_object_with_non_authorized_user" : { "file" : "test_container_acl.py" },
      "test_delete_object_without_using_creds" : { "file" : "test_container_acl.py" },
      "test_delete_object_without_write_rights" : { "file" : "test_container_acl.py" },
      "test_delete_server_metadata_item" : { "file" : "servers/test_server_metadata.py" },
      "test_delete_server_pass_negative_id" : { "file" : "servers/test_servers_negative.py" },
      "test_delete_server_while_in_building_state" : { "file" : "servers/test_servers.py" },
      "test_delete_user" : { "file" : "admin/test_users.py" },
      "test_delete_user_request_without_a_token" : { "file" : "admin/test_users_negative.py" },
      "test_delete_users_by_unauthorized_user" : { "file" : "admin/test_users_negative.py" },
      "test_exceed_max_template_size_fails" : { "file" : "stacks/test_limits.py" },
      "test_get_console_output" : { "file" : "servers/test_server_actions.py" },
      "test_get_console_output_server_id_in_reboot_status" : { "file" : "servers/test_server_actions.py" },
      "test_get_default_quotas" : { "file" : "test_quotas.py" },
      "test_get_image_meta_by_null_id" : { "file" : "v2/test_images.py" },
      "test_get_non_existent_server" : { "file" : "servers/test_servers_negative.py" },
      "test_get_object" : { "file" : "test_object_services.py" },
      "test_get_object_after_expiration_time" : { "file" : "test_object_temp_url.py" },
      "test_get_object_after_expiry_time" : { "file" : "test_object_expiry.py" },
      "test_get_object_if_different" : { "file" : "test_object_services.py" },
      "test_get_object_using_temp_url" : { "file" : "test_object_temp_url.py" },
      "test_get_quotas" : { "file" : "test_quotas.py" },
      "test_get_server_metadata_item" : { "file" : "servers/test_server_metadata.py" },
      "test_get_shared_images" : { "file" : "v1/test_image_members.py" },
      "test_get_users" : { "file" : "admin/test_users.py" },
      "test_get_users_by_unauthorized_user" : { "file" : "admin/test_users_negative.py" },
      "test_get_users_request_without_token" : { "file" : "admin/test_users_negative.py" },
      "test_grant_list_revoke_role_to_group_on_domain" : { "file" : "admin/v3/test_roles.py" },
      "test_grant_list_revoke_role_to_group_on_project" : { "file" : "admin/v3/test_roles.py" },
      "test_grant_list_revoke_role_to_user_on_domain" : { "file" : "admin/v3/test_roles.py" },
      "test_grant_list_revoke_role_to_user_on_project" : { "file" : "admin/v3/test_roles.py" },
      "test_host_name_is_same_as_server_name" : { "file" : "servers/test_create_server.py" },
      "test_index_container_format" : { "file" : "v1/test_images.py" },
      "test_index_disk_format" : { "file" : "v1/test_images.py" },
      "test_index_max_size" : { "file" : "v1/test_images.py" },
      "test_index_min_size" : { "file" : "v1/test_images.py" },
      "test_index_name" : { "file" : "v1/test_images.py" },
      "test_index_no_params" : { "file" : "v2/test_images.py" },
      "test_index_status_active_detail" : { "file" : "v1/test_images.py" },
      "test_invalid_access_ip_v4_address" : { "file" : "servers/test_servers_negative.py" },
      "test_invalid_ip_v6_address" : { "file" : "servers/test_servers_negative.py" },
      "test_list_account_metadata" : { "file" : "test_account_services.py" },
      "test_list_container_contents_json" : { "file" : "test_container_services.py" },
      "test_list_containers" : { "file" : "test_account_services.py" },
      "test_list_containers_with_end_marker" : { "file" : "test_account_services.py" },
      "test_list_containers_with_limit" : { "file" : "test_account_services.py" },
      "test_list_containers_with_limit_and_marker" : { "file" : "test_account_services.py" },
      "test_list_containers_with_marker" : { "file" : "test_account_services.py" },
      "test_list_containers_with_non_authorized_user" : { "file" : "test_account_services.py" },
      "test_list_domains" : { "file" : "admin/v3/test_domains.py" },
      "test_list_endpoints" : { "file" : "admin/v3/test_endpoints.py" },
      "test_list_events" : { "file" : "stacks/test_non_empty_stack.py" },
      "test_list_extensions" : { "file" : "test_extensions.py" },
      "test_list_health_monitors" : { "file" : "test_load_balancer.py" },
      "test_list_members" : { "file" : "test_load_balancer.py" },
      "test_list_networks" : { "file" : "test_networks.py" },
      "test_list_policies" : { "file" : "admin/v3/test_policies.py" },
      "test_list_pools" : { "file" : "test_load_balancer.py" },
      "test_list_ports" : { "file" : "test_networks.py" },
      "test_list_projects_by_unauthorized_user" : { "file" : "admin/v3/test_projects.py" },
      "test_list_resources" : { "file" : "stacks/test_non_empty_stack.py" },
      "test_list_roles" : { "file" : "admin/test_roles.py" },
      "test_list_roles_by_unauthorized_user" : { "file" : "admin/test_roles.py" },
      "test_list_roles_request_without_token" : { "file" : "admin/test_roles.py" },
      "test_list_security_groups" : { "file" : "test_security_groups.py" },
      "test_list_server_addresses" : { "file" : "servers/test_server_addresses.py" },
      "test_list_server_addresses_by_network" : { "file" : "servers/test_server_addresses.py" },
      "test_list_server_addresses_by_network_neg" : { "file" : "servers/test_server_addresses.py" },
      "test_list_server_addresses_invalid_server_id" : { "file" : "servers/test_server_addresses.py" },
      "test_list_server_metadata" : { "file" : "servers/test_server_metadata.py" },
      "test_list_servers" : { "file" : "servers/test_create_server.py" },
      "test_list_servers_by_changes_since" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_by_changes_since_future_date" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_by_changes_since_invalid_date" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_by_limits" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_by_limits_greater_than_actual_count" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_by_limits_pass_negative_value" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_by_limits_pass_string" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_by_non_existing_flavor" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_by_non_existing_image" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_by_non_existing_server_name" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_detail_server_is_deleted" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_detailed_filter_by_flavor" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_detailed_filter_by_image" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_detailed_filter_by_server_name" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_detailed_filter_by_server_status" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_detailed_limit_results" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_filter_by_flavor" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_filter_by_image" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_filter_by_limit" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_filter_by_server_name" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_filter_by_server_status" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_filtered_by_ip" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_filtered_by_ip_regex" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_filtered_by_name_wildcard" : { "file" : "servers/test_list_server_filters.py" },
      "test_list_servers_status_non_existing" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_with_a_deleted_server" : { "file" : "servers/test_list_servers_negative.py" },
      "test_list_servers_with_detail" : { "file" : "servers/test_create_server.py" },
      "test_list_services" : { "file" : "admin/test_services.py" },
      "test_list_show_extensions" : { "file" : "test_extensions.py" },
      "test_list_subnets" : { "file" : "test_networks.py" },
      "test_list_tenant_request_without_token" : { "file" : "admin/test_tenant_negative.py" },
      "test_list_tenants_by_unauthorized_user" : { "file" : "admin/test_tenant_negative.py" },
      "test_list_user_projects" : { "file" : "admin/v3/test_users.py" },
      "test_list_user_roles" : { "file" : "admin/test_roles.py" },
      "test_list_user_roles_by_unauthorized_user" : { "file" : "admin/test_roles.py" },
      "test_list_user_roles_for_non_existent_user" : { "file" : "admin/test_roles.py" },
      "test_list_user_roles_request_without_token" : { "file" : "admin/test_roles.py" },
      "test_list_users_for_tenant" : { "file" : "admin/test_users.py" },
      "test_list_users_with_invalid_tenant" : { "file" : "admin/test_users_negative.py" },
      "test_list_users_with_roles_for_tenant" : { "file" : "admin/test_users.py" },
      "test_list_vips" : { "file" : "test_load_balancer.py" },
      "test_list_vpn_services" : { "file" : "test_vpnaas_extensions.py" },
      "test_lock_unlock_server" : { "file" : "servers/test_server_actions.py" },
      "test_object_metadata" : { "file" : "test_object_services.py" },
      "test_object_upload_in_segments" : { "file" : "test_object_services.py" },
      "test_pause_non_existent_server" : { "file" : "servers/test_servers_negative.py" },
      "test_pause_paused_server" : { "file" : "servers/test_servers_negative.py" },
      "test_pause_unpause_server" : { "file" : "servers/test_server_actions.py" },
      "test_project_create_duplicate" : { "file" : "admin/v3/test_projects.py" },
      "test_project_create_enabled" : { "file" : "admin/v3/test_projects.py" },
      "test_project_create_not_enabled" : { "file" : "admin/v3/test_projects.py" },
      "test_project_create_with_description" : { "file" : "admin/v3/test_projects.py" },
      "test_project_delete_by_unauthorized_user" : { "file" : "admin/v3/test_projects.py" },
      "test_project_list_delete" : { "file" : "admin/v3/test_projects.py" },
      "test_project_update_desc" : { "file" : "admin/v3/test_projects.py" },
      "test_project_update_enable" : { "file" : "admin/v3/test_projects.py" },
      "test_project_update_name" : { "file" : "admin/v3/test_projects.py" },
      "test_put_object_using_temp_url" : { "file" : "test_object_temp_url.py" },
      "test_quotas" : { "file" : "test_quotas.py" },
      "test_read_object_with_non_authorized_user" : { "file" : "test_container_acl.py" },
      "test_read_object_with_rights" : { "file" : "test_container_acl.py" },
      "test_read_object_without_rights" : { "file" : "test_container_acl.py" },
      "test_reboot_non_existent_server" : { "file" : "servers/test_servers_negative.py" },
      "test_reboot_server_hard" : { "file" : "servers/test_server_actions.py" },
      "test_reboot_server_soft" : { "file" : "servers/test_server_actions.py" },
      "test_rebuild_non_existent_server" : { "file" : "servers/test_servers_negative.py" },
      "test_rebuild_reboot_deleted_server" : { "file" : "servers/test_servers_negative.py" },
      "test_rebuild_server" : { "file" : "servers/test_server_actions.py" },
      "test_register_http_image" : { "file" : "v1/test_images.py" },
      "test_register_image_with_min_ram" : { "file" : "v1/test_images.py" },
      "test_register_remote_image" : { "file" : "v1/test_images.py" },
      "test_register_then_upload" : { "file" : "v2/test_images.py" },
      "test_register_with_invalid_container_format" : { "file" : "v2/test_images.py" },
      "test_register_with_invalid_disk_format" : { "file" : "v2/test_images.py" },
      "test_remove_member" : { "file" : "v1/test_image_members.py" },
      "test_remove_user_role" : { "file" : "admin/test_roles.py" },
      "test_remove_user_role_by_unauthorized_user" : { "file" : "admin/test_roles.py" },
      "test_remove_user_role_non_existant_role" : { "file" : "admin/test_roles.py" },
      "test_remove_user_role_non_existant_tenant" : { "file" : "admin/test_roles.py" },
      "test_remove_user_role_non_existant_user" : { "file" : "admin/test_roles.py" },
      "test_remove_user_role_request_without_token" : { "file" : "admin/test_roles.py" },
      "test_resize_server_confirm" : { "file" : "servers/test_server_actions.py" },
      "test_resize_server_revert" : { "file" : "servers/test_server_actions.py" },
      "test_resize_server_with_non_existent_flavor" : { "file" : "servers/test_servers_negative.py" },
      "test_resize_server_with_null_flavor" : { "file" : "servers/test_servers_negative.py" },
      "test_resource_metadata" : { "file" : "stacks/test_non_empty_stack.py" },
      "test_resume_non_existent_server" : { "file" : "servers/test_servers_negative.py" },
      "test_resume_server_invalid_state" : { "file" : "servers/test_servers_negative.py" },
      "test_role_create_blank_name" : { "file" : "admin/test_roles.py" },
      "test_role_create_delete" : { "file" : "admin/test_roles.py" },
      "test_role_create_duplicate" : { "file" : "admin/test_roles.py" },
      "test_role_create_update_get" : { "file" : "admin/v3/test_roles.py" },
      "test_server_create_metadata_key_too_long" : { "file" : "servers/test_server_metadata.py" },
      "test_server_metadata_negative" : { "file" : "servers/test_server_metadata.py" },
      "test_server_name_blank" : { "file" : "servers/test_servers_negative.py" },
      "test_set_server_metadata" : { "file" : "servers/test_server_metadata.py" },
      "test_set_server_metadata_item" : { "file" : "servers/test_server_metadata.py" },
      "test_show_event" : { "file" : "stacks/test_non_empty_stack.py" },
      "test_show_health_monitor" : { "file" : "test_load_balancer.py" },
      "test_show_member" : { "file" : "test_load_balancer.py" },
      "test_show_network" : { "file" : "test_networks.py" },
      "test_show_non_existent_network" : { "file" : "test_networks.py" },
      "test_show_non_existent_port" : { "file" : "test_networks.py" },
      "test_show_non_existent_security_group" : { "file" : "test_security_groups_negative.py" },
      "test_show_non_existent_security_group_rule" : { "file" : "test_security_groups_negative.py" },
      "test_show_non_existent_subnet" : { "file" : "test_networks.py" },
      "test_show_pool" : { "file" : "test_load_balancer.py" },
      "test_show_port" : { "file" : "test_networks.py" },
      "test_show_resource" : { "file" : "stacks/test_non_empty_stack.py" },
      "test_show_subnet" : { "file" : "test_networks.py" },
      "test_show_template" : { "file" : "stacks/test_templates.py" },
      "test_show_vip" : { "file" : "test_load_balancer.py" },
      "test_show_vpn_service" : { "file" : "test_vpnaas_extensions.py" },
      "test_stack_crud_no_resources" : { "file" : "stacks/test_stacks.py" },
      "test_stack_list" : { "file" : "stacks/test_non_empty_stack.py" },
      "test_stack_list_responds" : { "file" : "stacks/test_stacks.py" },
      "test_stack_show" : { "file" : "stacks/test_non_empty_stack.py" },
      "test_stack_wait_condition_data" : { "file" : "stacks/test_server_cfn_init.py" },
      "test_stop_non_existent_server" : { "file" : "servers/test_servers_negative.py" },
      "test_stop_start_server" : { "file" : "servers/test_server_actions.py" },
      "test_suspend_non_existent_server" : { "file" : "servers/test_servers_negative.py" },
      "test_suspend_resume_server" : { "file" : "servers/test_server_actions.py" },
      "test_suspend_server_invalid_state" : { "file" : "servers/test_servers_negative.py" },
      "test_tenant_create_duplicate" : { "file" : "admin/test_tenant_negative.py" },
      "test_tenant_create_enabled" : { "file" : "admin/test_tenants.py" },
      "test_tenant_create_not_enabled" : { "file" : "admin/test_tenants.py" },
      "test_tenant_create_with_description" : { "file" : "admin/test_tenants.py" },
      "test_tenant_delete_by_unauthorized_user" : { "file" : "admin/test_tenant_negative.py" },
      "test_tenant_delete_request_without_token" : { "file" : "admin/test_tenant_negative.py" },
      "test_tenant_list_delete" : { "file" : "admin/test_tenants.py" },
      "test_tenant_update_by_unauthorized_user" : { "file" : "admin/test_tenant_negative.py" },
      "test_tenant_update_desc" : { "file" : "admin/test_tenants.py" },
      "test_tenant_update_enable" : { "file" : "admin/test_tenants.py" },
      "test_tenant_update_name" : { "file" : "admin/test_tenants.py" },
      "test_tenant_update_request_without_token" : { "file" : "admin/test_tenant_negative.py" },
      "test_tokens" : { "file" : "admin/v3/test_tokens.py" },
      "test_unpause_non_existent_server" : { "file" : "servers/test_servers_negative.py" },
      "test_unpause_server_invalid_state" : { "file" : "servers/test_servers_negative.py" },
      "test_update_access_server_address" : { "file" : "servers/test_servers.py" },
      "test_update_endpoint" : { "file" : "admin/v3/test_endpoints.py" },
      "test_update_metadata_empty_body" : { "file" : "servers/test_server_metadata.py" },
      "test_update_name_of_non_existent_server" : { "file" : "servers/test_servers_negative.py" },
      "test_update_non_existent_tenant" : { "file" : "admin/test_tenant_negative.py" },
      "test_update_server_metadata" : { "file" : "servers/test_server_metadata.py" },
      "test_update_server_name" : { "file" : "servers/test_servers.py" },
      "test_update_server_name_length_exceeds_256" : { "file" : "servers/test_servers_negative.py" },
      "test_update_server_of_another_tenant" : { "file" : "servers/test_servers_negative.py" },
      "test_update_server_set_empty_name" : { "file" : "servers/test_servers_negative.py" },
      "test_update_service" : { "file" : "admin/v3/test_services.py" },
      "test_update_user" : { "file" : "admin/test_users.py" },
      "test_update_user_by_unauthorized_user" : { "file" : "admin/test_users_negative.py" },
      "test_update_user_for_non_existant_user" : { "file" : "admin/test_users_negative.py" },
      "test_update_user_request_without_a_token" : { "file" : "admin/test_users_negative.py" },
      "test_upload_large_object" : { "file" : "test_container_quotas.py" },
      "test_upload_too_many_objects" : { "file" : "test_container_quotas.py" },
      "test_upload_valid_object" : { "file" : "test_container_quotas.py" },
      "test_user_authentication" : { "file" : "admin/test_users.py" },
      "test_user_modify_quota" : { "file" : "test_account_quotas.py" },
      "test_user_update" : { "file" : "admin/v3/test_users.py" },
      "test_validate_template" : { "file" : "stacks/test_templates.py" },
      "test_validate_template_url" : { "file" : "stacks/test_templates.py" },
      "test_verify_created_server_vcpus" : { "file" : "servers/test_create_server.py" },
      "test_verify_server_details" : { "file" : "servers/test_create_server.py" },
      "test_versioned_container" : { "file" : "test_object_version.py" },
      "test_web_index" : { "file" : "test_container_staticweb.py" },
      "test_web_listing" : { "file" : "test_container_staticweb.py" },
      "test_write_object_with_non_authorized_user" : { "file" : "test_container_acl.py" },
      "test_write_object_with_rights" : { "file" : "test_container_acl.py" },
      "test_write_object_without_rights" : { "file" : "test_container_acl.py" },
      "test_write_object_without_using_creds" : { "file" : "test_container_acl.py" },
      "test_write_object_without_write_rights" : { "file" : "test_container_acl.py" }
    }
}